#bot_handlers.py

import os
from datetime import datetime, timedelta
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from help.minutes_calc import calculate_minutes
from config import EXCEL_FOLDER, ADMINS, ALLOWED_USERS
from keyboards.keyboards import get_start_keyboard, get_back_keyboard

async def button_handler(callback_query: types.CallbackQuery, callback_data: dict):
    user_id = callback_query.from_user.id
    command = callback_data["command"]

    if command == "help":
        await cmd_help(callback_query.message)
    elif command == "update_excel":
        await cmd_update_excel(callback_query.message, user_id)
    elif command == "get_minutes":
        await cmd_get_minutes(callback_query.message, user_id)
    elif command == "start":
        await callback_query.message.edit_text('üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç.', reply_markup=get_start_keyboard(user_id))

    await callback_query.answer()

async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    if user_id not in ALLOWED_USERS and user_id not in ADMINS:
        await message.answer("üîí –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    await message.bot.send_message(message.chat.id, 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç.', reply_markup=get_start_keyboard(user_id))

async def cmd_help(message: types.Message):
    help_msg = "üëâ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–∏ –º–∏–Ω—É—Ç—ã, –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É [–ü–æ–ª—É—á–∏—Ç—å –º–∏–Ω—É—Ç—ã]."
    await message.answer(text=help_msg, reply_markup=get_back_keyboard())
    await message.delete()

async def cmd_update_excel(message: types.Message, user_id: int): 
    if user_id not in ADMINS:
        await message.answer("üîí –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É.")
        return
    await message.answer(text='üìé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–π–ª Excel.', reply_markup=get_back_keyboard())
    await message.delete()



async def cmd_get_minutes(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç –º–∏–Ω—É—Ç
    excel_files = [f for f in os.listdir(EXCEL_FOLDER) if f.endswith('.xlsx')]
    excel_files.sort(key=lambda x: os.path.getmtime(os.path.join(EXCEL_FOLDER, x)), reverse=True)
    latest_file = excel_files[0]
    minutes_summary = calculate_minutes(os.path.join(EXCEL_FOLDER, latest_file))

    if user_id in ADMINS:
        # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –ø–æ–ª—É—á–∞—é—Ç –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç
        await callback_query.message.edit_text(minutes_summary, reply_markup=get_back_keyboard())
    else:
        # –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –º–∏–Ω—É—Ç—ã
        user_name = ALLOWED_USERS.get(user_id)
        if user_name:
            user_minutes_line = next((line for line in minutes_summary.split('\n') if user_name in line), None)
            if user_minutes_line:
                await callback_query.message.edit_text(user_minutes_line, reply_markup=get_back_keyboard())
            else:
                await callback_query.message.edit_text(f"‚ùå –ú–∏–Ω—É—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_name} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", reply_markup=get_back_keyboard())
        else:
            await callback_query.message.edit_text("üîí –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.", reply_markup=get_back_keyboard())


async def process_excel_file(message: types.Message):
    if message.from_user.id not in ADMINS:
        await message.answer("üîí –ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É.")
        return
    if message.document:
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤–Ω—É—Ç—Ä–∏ –ø–∞–ø–∫–∏ EXCEL_FOLDER —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º —Ñ–∞–π–ª–∞
        file_name = message.document.file_name
        file_path = os.path.join(EXCEL_FOLDER, file_name)
        await message.document.download(destination_file=file_path)  
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º –∏–∑ —á–∞—Ç–∞
        await message.delete()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω, –∏ —É–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        success_text = f'‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω. \n–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: {file_name}.'
        await message.answer(text=success_text, reply_markup=get_back_keyboard())
        await message.delete()
    else:
        await message.answer(text='üìé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–π–ª Excel.', reply_markup=get_back_keyboard())
        await message.delete()

